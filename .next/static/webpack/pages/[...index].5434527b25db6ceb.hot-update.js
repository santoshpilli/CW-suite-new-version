/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[...index]",{

/***/ "./pages/[...index].js":
/*!*****************************!*\
  !*** ./pages/[...index].js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// [...index].js\n// import React from \"react\";\n// import PageSEO from \"../components/common/PageSEO\";\n// import { MetaData } from \"../components/common/Helper\";\n// import RenderSections from \"../components/renderSections\";\n// import menuData from './menu.json';\n// import LoadingAnimation from \"../custom/animate\";\n// import Layout from \"../hoc/Layout\";\n// import axios from \"axios\";\n// import Custom404 from \"./404\";\n// import CustomPages from \"../custom\";\n// export async function getStaticPaths() {\n//   const paths = menuData.map(menuItem => {\n//     const paths = [];\n//     if (menuItem.children) {\n//       menuItem.children.forEach(childItem => {\n//         if (childItem.subchildren) {\n//           childItem.subchildren.forEach(subChildItem => {\n//             paths.push({ params: { index: subChildItem.slug.split('/').filter(Boolean) } });\n//           });\n//         } else {\n//           paths.push({ params: { index: childItem.slug.split('/').filter(Boolean) } });\n//         }\n//       });\n//     } else {\n//       paths.push({ params: { index: menuItem.slug.split('/').filter(Boolean) } });\n//     }\n//     return paths;\n//   }).flat();\n//   return { paths, fallback: 'blocking' };\n// }\n// console.log(\"menuData11=====>\", menuData)\n// export async function getStaticProps(context) {\n//   console.log(\"calling==========>\")\n//   const { params } = context;\n//   const pathSegments = params.index || [];\n//   const path = `/${pathSegments.join(\"/\")}`;\n//   console.log(\"path=======>\", path )\n//   console.log(\"pathSegments========>\", pathSegments)\n//   let matchedMenuItem = null;\n//   for (const menuItem of menuData) {\n//     if (menuItem.slug === path) {\n//       matchedMenuItem = menuItem;\n//       break;\n//     }\n//     if (menuItem.children) {\n//       for (const childItem of menuItem.children) {\n//         if (childItem.slug === path) {\n//           matchedMenuItem = childItem;\n//           break;\n//         }\n//         if (childItem.subchildren) {\n//           for (const subChildItem of childItem.subchildren) {\n//             if (subChildItem.slug === path) {\n//               matchedMenuItem = subChildItem;\n//               break;\n//             }\n//           }\n//           if (matchedMenuItem) {\n//             break;\n//           }\n//         }\n//       }\n//       if (matchedMenuItem) {\n//         break;\n//       }\n//     }\n//   }\n// console.log(\"matchedMenuItem=========>\", matchedMenuItem)\n//   const { type, menuId, slug } = matchedMenuItem || {};\n//   console.log(\"slug=========>\", slug)\n//   if (!matchedMenuItem) {\n//     console.log(\"matchedMenuItem============>\", matchedMenuItem)\n//     return {\n//       notFound: true,\n//     };\n//   }\n//   if (type === 'custom') {\n//     return {\n//       props: {\n//         type,\n//         data: null,\n//         slug\n//       },\n//       revalidate: 86400, // Revalidate every 24 hours\n//     };\n//   } else {\n//     try {\n//       console.log(\"in try block==========>\")\n//       let tempSlug = path.substring(1);\n//       console.log(\"tempSlug===============>\",tempSlug)\n//       const finalUrl = `${process.env.NEXT_PUBLIC_BASE_URL}/api/pageData?slug=${tempSlug}`;\n//       const headers = {\n//         'Content-Type': 'application/json',\n//       };\n//       console.log(\"finalUrl====================>\",finalUrl)\n//       const response = await axios.get(finalUrl, headers);\n//       console.log(\"response========= after api call>\", response )\n//       const data = response.data?.documents[0];\n//       if (!data) {\n//         return {\n//           notFound: true,\n//         };\n//       }\n//       return {\n//         props: {\n//           type,\n//           data,\n//           slug\n//         },\n//         revalidate: 86400, // Revalidate every 24 hours\n//       };\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//       return {\n//         notFound: true,\n//         revalidate: 86400, // Revalidate every 24 hours\n//       };\n//     }\n//   }\n// }\n// export default function Home({ type, data, slug }) {\n//   if (!data && type !== 'custom') {\n//     return <Custom404 />;\n//   }\n//   return (\n//     <>\n//       <PageSEO\n//         title={data?.pageTitle}\n//         canonicalTag={\"\"}\n//         metatitleTag={MetaData[0].titleTag}\n//         metaDes={MetaData[0].metaDescription}\n//       />\n//       {data === null && type === \"page\" ? <Layout> <LoadingAnimation /> </Layout> :\n//         type === 'page' && <RenderSections data={data} />\n//       }\n//       {type === 'post' && <PostComponent />}\n//       {type === 'form' && <Layout><h2>Form component</h2></Layout>}\n//       {type === 'custom' && <CustomPages type={type} slug={slug} />}\n//       {data === null && type !== 'custom' && <Custom404 />}\n//     </>\n//   );\n// }\n// import React, { useState, useEffect } from \"react\";\n// import PageSEO from \"../components/common/PageSEO\";\n// import { MetaData } from \"../components/common/Helper\";\n// import RenderSections from \"../components/renderSections\";\n// import LoadingAnimation from \"../custom/animate\";\n// import Layout from \"../hoc/Layout\";\n// import axios from \"axios\";\n// import Custom404 from \"./404\";\n// import CustomPages from \"../custom\";\n// import menuData from './menu.json';\n// export async function getStaticPaths() {\n//   const paths = menuData.map(menuItem => {\n//     const paths = [];\n//     if (menuItem.children) {\n//       menuItem.children.forEach(childItem => {\n//         if (childItem.subchildren) {\n//           childItem.subchildren.forEach(subChildItem => {\n//             paths.push({ params: { index: subChildItem.slug.split('/').filter(Boolean) } });\n//           });\n//         } else {\n//           paths.push({ params: { index: childItem.slug.split('/').filter(Boolean) } });\n//         }\n//       });\n//     } else {\n//       paths.push({ params: { index: menuItem.slug.split('/').filter(Boolean) } });\n//     }\n//     return paths;\n//   }).flat();\n//   return { paths, fallback: 'blocking' };\n// }\n// export async function getStaticProps(context) {\n//   const { params } = context;\n//   const pathSegments = params.index || [];\n//   const path = `/${pathSegments.join(\"/\")}`;\n//   let matchedMenuItem = null;\n//   for (const menuItem of menuData) {\n//     if (menuItem.slug === path) {\n//       matchedMenuItem = menuItem;\n//       break;\n//     }\n//     if (menuItem.children) {\n//       for (const childItem of menuItem.children) {\n//         if (childItem.slug === path) {\n//           matchedMenuItem = childItem;\n//           break;\n//         }\n//         if (childItem.subchildren) {\n//           for (const subChildItem of childItem.subchildren) {\n//             if (subChildItem.slug === path) {\n//               matchedMenuItem = subChildItem;\n//               break;\n//             }\n//           }\n//           if (matchedMenuItem) {\n//             break;\n//           }\n//         }\n//       }\n//       if (matchedMenuItem) {\n//         break;\n//       }\n//     }\n//   }\n//   const { type, menuId, slug } = matchedMenuItem || {};\n//   if (!matchedMenuItem) {\n//     return {\n//       notFound: true,\n//     };\n//   }\n//   if (type === 'custom') {\n//     return {\n//       props: {\n//         type,\n//         data: null,\n//         slug\n//       },\n//       revalidate: 86400, \n//     };\n//   } else {\n//     try {\n//       let tempSlug = path.substring(1);\n//       const finalUrl = `${process.env.NEXT_PUBLIC_BASE_URL}/api/pageData?slug=${tempSlug}`;\n//       const headers = {\n//         'Content-Type': 'application/json',\n//       };\n//       const response = await axios.get(finalUrl, headers);\n//       const data = response.data?.documents[0];\n//       if (!data) {\n//         return {\n//           notFound: true,\n//         };\n//       }\n//       return {\n//         props: {\n//           type,\n//           data,\n//           slug\n//         },\n//         revalidate: 86400,\n//       };\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//       return {\n//         notFound: true,\n//         revalidate: 86400, \n//       };\n//     }\n//   }\n// }\n// function Home({ type, data, slug }) {\n//   const [menuData, setMenuData] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     const fetchMenuData = async () => {\n//       try {\n//         const response = await axios.get(`/api/getmenuData`);\n//         console.log('Fetched menu data=======>', response.data);\n//         console.log('calling=============> getmenu')\n//         console.log(\"MenuData=========>\", fetchMenuData )\n//         setMenuData(response.data);\n//       } catch (error) {\n//         setError(error);\n//         console.error('Error fetching menu data:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchMenuData();\n//   }, []);\n//   if (loading) {\n//     return <LoadingAnimation />;\n//   }\n//   if (error) {\n//     return <div>Error loading menu data: {error.message}</div>;\n//   }\n//   if (!data && type !== 'custom') {\n//     return <Custom404 />;\n//   }\n//   return (\n//     <>\n//       <PageSEO\n//         title={data?.pageTitle}\n//         canonicalTag={\"\"}\n//         metatitleTag={MetaData[0].titleTag}\n//         metaDes={MetaData[0].metaDescription}\n//       />\n//       {data === null && type === \"page\" ? <Layout> <LoadingAnimation /> </Layout> :\n//         type === 'page' && <RenderSections data={data} />\n//       }\n//       {type === 'post' && <PostComponent />}\n//       {type === 'form' && <Layout><h2>Form component</h2></Layout>}\n//       {type === 'custom' && <CustomPages type={type} slug={slug} />}\n//       {data === null && type !== 'custom' && <Custom404 />}\n//     </>\n//   );\n// }\n// export default Home;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/[...index].js\n"));

/***/ })

});